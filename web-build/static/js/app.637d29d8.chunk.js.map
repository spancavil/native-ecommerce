{"version":3,"sources":["firebase/config.js","context/Shop.js","constants/Colors.js","components/CategoryGridTile.js","data/category.js","screens/CategoriesScreen.js","components/BreadItem.js","screens/CategoryBreadScreen.js","screens/BreadDetailScreen.js","navigation/shop/index.js","components/CartItem.js","screens/CartScreen.js","navigation/cart/index.js","screens/OrdersScreen.js","navigation/orders/index.js","navigation/tab/index.js","screens/user/AuthScreen.js","navigation/auth/index.js","navigation/MainNavigator.js","App.js"],"names":["console","log","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","Shop","createContext","ShopProvider","children","useState","products","setProducts","cart","setCart","useEffect","a","async","queryCollection","query","collection","getDocs","querySnapshot","productos","forEach","doc","producto","id","data","push","Provider","value","addToCart","product","filter","productInCart","length","isInCart","generateOrder","buyer","total","reduce","acumulador","elemento","price","user","currentUser","order","items","email","date","Date","toLocaleString","addDoc","docRef","error","message","styles","StyleSheet","create","gridItem","flex","borderRadius","margin","height","container","shadowColor","shadowOpacity","shadowOffset","width","shadowRadius","elevation","justifyContent","alignItems","padding","title","CategoryGridTile","item","onSelected","TouchableCmp","TouchableOpacity","Platform","OS","version","TouchableNativeFeedback","View","style","backgroundColor","color","onPress","Text","CATEGORIES","CategoriesScreen","navigation","handlerSelectedCategory","name","categoryID","FlatList","keyExtractor","toString","renderItem","itemData","numColumns","breadItem","breadRow","flexDirection","fontSize","BreadItem","onSelectBread","screen","CategoryBreadScreen","route","useContext","filtered","setFiltered","filterProducts","category","params","handlerSelected","navigate","ActivityIndicator","size","description","marginTop","marginBottom","marginLeft","BreadDetailScreen","Button","goBack","ShopStack","createStackNavigator","handleSignOut","signOut","then","ShopNavigator","Navigator","initialRouteName","screenOptions","headerStyle","colors","headerTintColor","headerTitleStyle","fontWeight","headerRight","props","Screen","component","options","header","detail","flexWrap","text","CartItem","onDelete","footer","borderTopColor","borderTopWidth","list","CarritoScreen","CartStack","CartNavigator","CartScreen","OrdersScreen","OrderStack","OrderNavigator","TabsStack","createBottomTabNavigator","shadow","TabsShop","tabBarOptions","showLabel","position","bottom","left","right","ShopScreen","tabBarIcon","focused","Ionicons","maxWidth","maxHeight","button","input","paddingHorizontal","paddingVertical","borderBottomColor","borderBottomWidth","AuthScreen","isSingUp","setIsSingUp","setError","setEmail","password","setPassword","KeyboardAvoidingView","behavior","keyboardVerticalOffset","keyboardType","required","autoCapitalize","onChangeText","secureTextEntry","minLength","errorText","createUserWithEmailAndPassword","userCredential","catch","signInWithEmailAndPassword","prevState","AuthStack","AuthNavigator","headerShown","isLogged","setIsLogged","onAuthStateChanged","uid","NavigationContainer","App","MainNavigator"],"mappings":"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","file":"static/js/app.637d29d8.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport {initializeApp} from \"firebase/app\";\nimport {getFirestore} from 'firebase/firestore';\nimport {getAuth} from 'firebase/auth';\n\nimport {  REACT_APP_API_KEY,\nREACT_APP_AUTH_DOMAIN,\nREACT_APP_PROJECT_ID,\nREACT_APP_PROJECT_BUCKET,\nREACT_APP_MESSAGING_SENDER_ID,\nREACT_APP_APP_ID} from '@env';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nconsole.log(REACT_APP_API_KEY);\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: REACT_APP_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_PROJECT_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);","import { addDoc, collection, getDocs, query } from \"firebase/firestore\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { auth, db } from \"../firebase/config\";\n\nexport const Shop = createContext();\n\nconst ShopProvider = ({children}) => {\n\n    const [products, setProducts] = useState([]);\n    const [cart, setCart] = useState([])\n\n    //OPCIONAL\n    const [categories, setCategories] = useState ([])\n\n    const isInCart = (product) => {\n        return cart.filter(productInCart => productInCart === product).length !== 0 ? true : false;\n    }\n\n    //NO DEBERÍA PERMITIR REPETIDOS. O LE AGREGAMOS QTY O QUE NO ADMITA AL REPETIDO.\n    const addToCart = (product) => {\n        if (isInCart(product)) return\n        else setCart([...cart, product]);\n    }\n\n    const generateOrder = async (buyer) => {\n        const total = cart.reduce((acumulador, elemento) => acumulador = acumulador + elemento.price, 0 );\n\n        const user = auth.currentUser;\n        //Generamos el DTO (data transfer object) con los datos acumulados\n        const order = {\n            items: [...cart],\n            buyer: user.email,\n            total: total,\n            date: new Date().toLocaleString()\n        }\n\n        console.log(order);\n        //Guardamos la order en firebase\n        try {\n            const docRef = await addDoc(collection(db, \"orders\"), order);\n            console.log(\"Document written with ID: \", docRef.id);\n        } catch (e) {\n            console.error(\"Error adding document: \", e.message);\n        }\n    }\n\n    useEffect(()=> {\n\n        //Utilizamos una IIFE\n        ( async ()=> {\n            //Hacemos una query para obtener la collection raw\n            const queryCollection = query(collection(db, \"products\"));\n            //Obtenemos los datos de los productos y los guardamos en el estado\n            const querySnapshot = await getDocs(queryCollection);\n            const productos = [];\n            querySnapshot.forEach((doc)=> {\n                const producto = {id: doc.id, ...doc.data()};\n                productos.push(producto);\n            })\n            setProducts([...productos]);\n        })()\n\n    }, [])\n\n    return(\n        <Shop.Provider value = {{products, cart, addToCart, generateOrder}}>\n            {children}\n        </Shop.Provider>\n    )\n}\n\nexport default ShopProvider;","export default {\r\n    primaryColor: '#4a148c',\r\n    accentColor: '#ff6f00',\r\n}","import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TouchableNativeFeedback,\r\n  Platform\r\n} from \"react-native\";\r\n\r\nconst CategoryGridTile = ({item, onSelected}) => {\r\n    let TouchableCmp = TouchableOpacity\r\n    if(Platform.OS === 'android' && Platform.version >= 21) {\r\n        TouchableCmp = TouchableNativeFeedback\r\n    }\r\n\r\n    return (\r\n        <View style={styles.gridItem}>\r\n            <TouchableCmp \r\n                style={{...styles.container, ...{backgroundColor: item.color || 'blue'}}}\r\n                onPress={() => onSelected(item)}\r\n            >\r\n                <View>\r\n                    <Text style={styles.title}>{item.title}</Text>\r\n                </View>\r\n            </TouchableCmp>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    gridItem: {\r\n        flex: 1,\r\n        borderRadius: 6,\r\n        margin: 15,\r\n        height: 150\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        borderRadius: 6,\r\n        shadowColor: 'black',\r\n        shadowOpacity: 0.26,\r\n        shadowOffset: {width: 0, height: 2},\r\n        shadowRadius: 6,\r\n        elevation: 3,\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        padding: 8\r\n    },\r\n    title: {\r\n    }\r\n})\r\n\r\nexport default CategoryGridTile;\r\n","export const CATEGORIES = [\r\n    {\r\n        title: \"electronics\",\r\n        id: 1\r\n    },\r\n    {\r\n        title:\"jewelery\",\r\n        id: 2\r\n    },\r\n    {\r\n        title: \"men's clothing\",\r\n        id: 3\r\n    },\r\n    {\r\n        title: \"women's clothing\",\r\n        id: 4\r\n    }\r\n]","import React from 'react'\r\nimport { FlatList, View, StyleSheet } from 'react-native'\r\n\r\nimport CategoryGridTile from '../components/CategoryGridTile';\r\n\r\nimport { CATEGORIES } from '../data/category';\r\n\r\nconst CategoriesScreen = ({navigation}) => {\r\n\r\n    const handlerSelectedCategory = (item) => {\r\n        console.log(item);\r\n        navigation.push('BreadCategory', {\r\n            name: item.title,\r\n            categoryID: item.id\r\n        })\r\n    }\r\n\r\n    const renderGridItem = (itemData) => (\r\n        <CategoryGridTile \r\n            item={itemData.item} \r\n            onSelected={handlerSelectedCategory}/>\r\n        )\r\n\r\n    console.log(CATEGORIES);\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList \r\n                data={CATEGORIES}\r\n                keyExtractor={(item) => item.id.toString()}\r\n                renderItem={renderGridItem}\r\n                numColumns={2} />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    }\r\n})\r\n\r\n\r\nexport default CategoriesScreen\r\n","import React from 'react'\r\nimport { View, Text, StyleSheet, TouchableOpacity, TouchableNativeFeedback, Platform } from 'react-native'\r\n\r\nconst BreadItem = ({item, onSelectBread}) => {\r\n    let TouchableCmp = TouchableOpacity\r\n    if(Platform.OS === 'android' && Platform.version >= 21) {\r\n        TouchableCmp = TouchableNativeFeedback\r\n    }\r\n    return (\r\n        <View style={styles.breadItem}>\r\n            <TouchableCmp\r\n                onPress={() => onSelectBread(item)}\r\n            >\r\n                <View>\r\n                    <View style={styles.breadRow}>\r\n                        <Text style={styles.title}>{item.title}</Text>\r\n                    </View>\r\n                    <View>\r\n                        <Text>$ {item.price}</Text>\r\n                    </View>\r\n                </View>\r\n            </TouchableCmp>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    breadItem: {\r\n        height: 100,\r\n        width: '100%',\r\n        backgroundColor: '#ccc',\r\n        padding: 8,\r\n        margin: 8\r\n    },\r\n    breadRow: {\r\n        flexDirection: 'row'\r\n    },\r\n    title: {\r\n        fontSize: 20\r\n    }\r\n})\r\nexport default BreadItem\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { View, StyleSheet, FlatList, ActivityIndicator } from \"react-native\";\r\nimport { BREADS } from '../data/breads';\r\n\r\nimport BreadItem from \"../components/BreadItem\";\r\nimport { Shop } from \"../context/Shop\";\r\n\r\nconst CategoryBreadScreen = ({ navigation, route }) => {\r\n\r\n  const { products } = useContext(Shop);\r\n  const [filtered, setFiltered] = useState([])\r\n\r\n  //Filtramos los productos según el nombre de la categoría\r\n  useEffect(() => {\r\n    const filterProducts = products.filter(product => product.category === route.params.name);\r\n    console.log(filterProducts);\r\n    console.log(route.params.name);\r\n    setFiltered(filterProducts);\r\n  }, [products, setFiltered])\r\n\r\n  const handlerSelected = (item) => {\r\n\r\n    navigation.navigate(\"DetailBread\", { name: item.title, item: item })\r\n\r\n  }\r\n\r\n  const renderItemBread = (itemData) => <BreadItem item={itemData.item} onSelectBread={handlerSelected} />\r\n\r\n  return (\r\n    <>\r\n      {\r\n        filtered.length !== 0 ?\r\n          <View style={styles.screen}>\r\n            <FlatList\r\n              data={filtered}\r\n              keyExtractor={(item) => item.id.toString()}\r\n              renderItem={renderItemBread}\r\n            />\r\n          </View>\r\n          :\r\n          <ActivityIndicator size={\"large\"} color={\"blue\"} />\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    padding: 8\r\n  }\r\n})\r\n\r\nexport default CategoryBreadScreen;\r\n","import React, {useContext} from 'react'\r\nimport { View, Text, StyleSheet, Button } from 'react-native'\r\nimport { Shop } from '../context/Shop';\r\n\r\nconst BreadDetailScreen = ({route, navigation}) => {\r\n    \r\n    const {addToCart} = useContext(Shop);\r\n\r\n    const item = route.params.item;\r\n\r\n    return (\r\n        <View style={styles.screen}>\r\n            <View style={styles.container}>\r\n                <View>\r\n                    <Text style={styles.title}>{item.title}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.description}>{item.description}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.price}>$ {item.price}</Text>\r\n                </View>\r\n                <View style={styles.cart}>\r\n                <Button title=\"Volver\" onPress={()=>navigation.goBack()} />\r\n                <Button title=\"Agregar al carrito\" onPress={()=>addToCart(item)}/>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        padding: 10\r\n    },\r\n    container: {\r\n        flex: 0.9,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    title:{\r\n        fontSize: 25\r\n    },\r\n    price: {\r\n        fontSize: 40,\r\n    },\r\n    description: {\r\n        fontSize: 20\r\n    },\r\n    cart: {\r\n        flex: 0.1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        marginTop: 12,\r\n        marginBottom: 12,\r\n        marginLeft: 12,\r\n    }\r\n})\r\n\r\nexport default BreadDetailScreen\r\n","import React from 'react';\r\nimport { Platform, TouchableOpacity, Text } from 'react-native'\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport colors from '../../constants/Colors'\r\n\r\n// Screens\r\nimport CategoriesScreen from \"../../screens/CategoriesScreen\";\r\nimport CategoryBreadScreen from \"../../screens/CategoryBreadScreen\";\r\nimport BreadDetailScreen from \"../../screens/BreadDetailScreen\";\r\nimport { auth } from '../../firebase/config';\r\n\r\nconst ShopStack = createStackNavigator();\r\n\r\nconst handleSignOut = () => {\r\n    auth.signOut()\r\n        .then(() => {\r\n            console.log(\"Logged out\");\r\n        })\r\n}\r\n\r\nconst ShopNavigator = () => (\r\n\r\n    <ShopStack.Navigator\r\n        initialRouteName=\"Home\"\r\n        screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: Platform.OS === 'android' ? colors.primaryColor : '',\r\n            },\r\n            headerTintColor: Platform.OS === 'android' ? 'white' : colors.primaryColor,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n            },\r\n            headerRight:\r\n            (props)  => {\r\n                return (\r\n                <TouchableOpacity onPress={handleSignOut}>\r\n                    <Text>\r\n                        Log out\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                )\r\n            }\r\n        }}\r\n    >\r\n        <ShopStack.Screen\r\n            name=\"Home\"\r\n            component={CategoriesScreen}\r\n            options={{\r\n                title: 'Nuestra Panaderia',\r\n            }}\r\n        />\r\n        <ShopStack.Screen\r\n            name=\"BreadCategory\"\r\n            component={CategoryBreadScreen}\r\n            options={({ route }) => ({ title: route.params.name })}\r\n        />\r\n        <ShopStack.Screen\r\n            name=\"DetailBread\"\r\n            component={BreadDetailScreen}\r\n            options={({ route }) => ({ title: route.params.name })}\r\n        />\r\n    </ShopStack.Navigator>\r\n)\r\n\r\n\r\nexport default ShopNavigator ","import React from 'react'\r\nimport { View, Text, StyleSheet, Button } from 'react-native'\r\nconst CartItem = ({item, onDelete}) => {\r\n    return (\r\n        <View style={styles.item}>\r\n            <View style={styles.header}>\r\n                <Text style={styles.text}>{item.title}</Text>\r\n            </View>\r\n            <View style={styles.detail}>\r\n                <View>\r\n                    <Text>$ {item.price}</Text>\r\n                </View>\r\n                <View>\r\n                    <Button title=\"Borrar\" onPress={() => onDelete(item.id)}/>\r\n                </View>\r\n            </View>\r\n            \r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        flex: 1,\r\n        padding: 8,\r\n    },\r\n    header: {\r\n    },\r\n    detail: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        flexWrap: \"wrap\",\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n    }\r\n})\r\n\r\nexport default CartItem\r\n","import React, { useContext } from 'react'\r\nimport { View, Text, StyleSheet, Button } from 'react-native'\r\nimport { FlatList } from 'react-native-gesture-handler'\r\nimport CartItem from '../components/CartItem'\r\nimport { Shop } from '../context/Shop'\r\n\r\nconst CarritoScreen = () => {\r\n\r\n    const {cart, generateOrder} = useContext(Shop);\r\n\r\n    // Pending: añadir lógica para el borrado del item\r\n    const renderItemCart = ({item}) => <CartItem item={item} onDelete={()=> console.log('Borrado de cart!')}/> \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.list}>\r\n                <FlatList\r\n                    data={cart}\r\n                    keyExtractor={(item) => item.id.toString()}\r\n                    renderItem={renderItemCart}\r\n                />\r\n            </View>\r\n            {/* Añadir lógica para el cálculo del total */}\r\n            <View style={styles.footer}>\r\n                <Button title=\"Finalizar compra\" onPress={() => generateOrder()}/>\r\n                <Text style={styles.text}>Total: </Text>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 12\r\n    },\r\n    footer: {\r\n        flex: .2,\r\n        borderTopColor: '#ccc',\r\n        borderTopWidth: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        padding: 8\r\n    },\r\n    list: {\r\n        flex: .8\r\n    },\r\n    text: {\r\n        fontSize: 24,\r\n    }\r\n    \r\n})\r\nexport default CarritoScreen;\r\n","import React from 'react';\r\nimport { Platform } from 'react-native'\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport CartScreen from \"../../screens/CartScreen\";\r\n\r\nimport colors from '../../constants/Colors'\r\n\r\nconst CartStack = createStackNavigator();\r\nconst CartNavigator = () => (\r\n    <CartStack.Navigator\r\n        initialRouteName=\"Cart\"\r\n        screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: Platform.OS === 'android' ? colors.primaryColor : '',\r\n            },\r\n            headerTintColor: Platform.OS === 'android' ? 'white' : colors.primaryColor,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n            }\r\n        }}\r\n    >\r\n        <CartStack.Screen \r\n            name=\"Cart\" \r\n            component={CartScreen}\r\n            options={{title: 'Carrito de Compra'}} \r\n        />\r\n    </CartStack.Navigator>\r\n)\r\nexport default CartNavigator","import React from 'react'\r\nimport { View, StyleSheet, Text } from 'react-native'\r\n\r\nconst OrdersScreen = () => {\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>My orders</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 18\r\n    }\r\n})\r\n\r\nexport default OrdersScreen\r\n","import React from 'react';\r\nimport { Platform } from 'react-native'\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport OrdersScreen from \"../../screens/OrdersScreen\";\r\n\r\n\r\nimport colors from '../../constants/Colors'\r\n\r\nconst OrderStack = createStackNavigator();\r\nconst OrderNavigator = () => (\r\n    <OrderStack.Navigator\r\n        initialRouteName=\"Orders\"\r\n        screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: Platform.OS === 'android' ? colors.primaryColor : '',\r\n            },\r\n            headerTintColor: Platform.OS === 'android' ? 'white' : colors.primaryColor,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n            }\r\n        }}\r\n    >\r\n        <OrderStack.Screen \r\n            name=\"Orders\" \r\n            component={OrdersScreen}\r\n            options={{title: 'Ordenes'}} \r\n        />\r\n    </OrderStack.Navigator>\r\n)\r\nexport default OrderNavigator","import React from 'react';\r\nimport { StyleSheet, View, Text } from 'react-native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n// Screen\r\nimport ShopScreen from '../shop'\r\nimport CartScreen from '../cart'\r\nimport OrdersScreen from '../orders'\r\n\r\nconst TabsStack = createBottomTabNavigator()\r\n\r\nconst TabsShop = () => (\r\n    <TabsStack.Navigator\r\n        initialRouteName=\"Shop\"\r\n        tabBarOptions={{\r\n            showLabel: false,\r\n            style: {\r\n                position: \"absolute\",\r\n                bottom: 25,\r\n                left: 20,\r\n                right: 20,\r\n                elevation: 0,\r\n                borderRadius: 15,\r\n                height: 90,\r\n                ...styles.shadow\r\n            }\r\n        }}\r\n    >\r\n        <TabsStack.Screen \r\n            name=\"Shop\"\r\n            component={ShopScreen}\r\n            options={{\r\n                tabBarIcon: ({focused}) => (\r\n                    <View style={styles.item}>\r\n                       <Ionicons name=\"md-home\" size={24} color=\"black\" />\r\n                       <Text>Tienda</Text>\r\n                    </View>\r\n                )\r\n            }}\r\n        />\r\n        <TabsStack.Screen \r\n            name=\"Cart\"\r\n            component={CartScreen}\r\n            options={{\r\n                tabBarIcon: ({focused}) => (\r\n                    <View style={styles.item}>\r\n                       <Ionicons name=\"md-cart\" size={24} color=\"black\" />\r\n                       <Text>Carrito</Text>\r\n                    </View>\r\n                )\r\n            }}\r\n        />\r\n        <TabsStack.Screen \r\n            name=\"Orders\"\r\n            component={OrdersScreen}\r\n            options={{\r\n                tabBarIcon: ({focused}) => (\r\n                    <View style={styles.item}>\r\n                       <Ionicons name=\"md-list\" size={24} color=\"black\" />\r\n                       <Text>Ordenes</Text>\r\n                    </View>\r\n                )\r\n            }}\r\n        />\r\n        \r\n    </TabsStack.Navigator>\r\n)\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    shadow: {\r\n        shadowColor:'#7f5df0',\r\n        shadowOffset: {width: 0, height: 10},\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.5,\r\n        elevation: 5\r\n    },\r\n    item: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n\r\n})\r\nexport default TabsShop\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  KeyboardAvoidingView,\r\n  Button,\r\n} from \"react-native\";\r\n\r\nimport colors from \"../../constants/Colors\";\r\n\r\nimport { auth } from \"../../firebase/config\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n\r\nconst AuthScreen = props => {\r\n  const [isSingUp, setIsSingUp] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onHandlerSign = async () => {\r\n    //Lógica de registro\r\n    if (isSingUp) {\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n      .then (userCredential => {\r\n        console.log(userCredential);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        setError(error.message)\r\n      })\r\n    //Logica de login\r\n    } else {\r\n      signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        console.log(userCredential);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        setError(error.message)\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior=\"padding\"\r\n      keyboardVerticalOffset={50}\r\n      style={styles.screen}\r\n    >\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>TU PANADERIA - {isSingUp? \"Registro\": \"Login\"}</Text>\r\n        <View>\r\n          <Text>Email</Text> \r\n          <TextInput\r\n            keyboardType=\"email-address\"\r\n            required\r\n            autoCapitalize=\"none\"\r\n            onChangeText={(text)=> setEmail(text)}\r\n            value = {email}\r\n            style = {styles.input}\r\n          />\r\n          <Text>Password</Text>\r\n          <TextInput\r\n            keyboardType=\"default\"\r\n            secureTextEntry\r\n            required\r\n            minLength={6}\r\n            autoCapitalize=\"none\"\r\n            errorText=\"Por favor ingrese un password\"\r\n            onChangeText={(text)=> setPassword(text)}\r\n            value = {password}\r\n            style = {styles.input}\r\n          />\r\n          {error && <Text>{error}</Text>}\r\n        </View>\r\n        <View style={styles.footer}>\r\n          <View style={styles.button}>\r\n            <Button\r\n              title={isSingUp ? \"REGISTRARME\" : \"LOGIN\"}\r\n              color={colors.primaryColor}\r\n              onPress={onHandlerSign}\r\n            />\r\n          </View>\r\n          <View>\r\n            <Button\r\n              title={!isSingUp ? \"No tienes usuario? Registrame\" : \"Ya tienes usuario? Login\"}\r\n              color={colors.accentColor}\r\n              onPress={() => setIsSingUp((prevState) => !prevState)}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#203239\"\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    marginBottom: 18,\r\n  },\r\n  error: {\r\n    fontSize: 16,\r\n    margin: 8,\r\n    color: 'red',\r\n  },\r\n  container: {\r\n    width: \"80%\",\r\n    maxWidth: 400,\r\n    height: \"50%\",\r\n    maxHeight: 400,\r\n    padding: 12,\r\n  },\r\n  footer: {\r\n    marginTop: 42,\r\n  },\r\n  button: {\r\n    marginBottom: 8,\r\n  },\r\n  input: {\r\n    paddingHorizontal: 2,\r\n    paddingVertical: 5,\r\n    borderBottomColor: \"#ccc\",\r\n    borderBottomWidth: 2,\r\n    backgroundColor: \"#E0DDAA\",\r\n    margin: 10,\r\n  },\r\n});\r\n\r\nexport default AuthScreen;\r\n","import React from 'react';\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\n// Screens\r\nimport AuthScreen from \"../../screens/user/AuthScreen\";\r\n\r\nconst AuthStack = createStackNavigator()\r\nconst AuthNavigator = () => (\r\n    <AuthStack.Navigator\r\n      initialRouteName=\"Login\"\r\n      screenOptions={{\r\n        headerShown: false\r\n      }}\r\n    >\r\n      <AuthStack.Screen name=\"Login\" component={AuthScreen} />\r\n    </AuthStack.Navigator>\r\n)\r\n\r\n\r\nexport default AuthNavigator","import React, { useEffect, useState } from 'react'\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n\r\n// Stacks\r\nimport TabsShop from './tab';\r\nimport { auth, db } from '../firebase/config';\r\nimport AuthNavigator from './auth';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { addDoc, collection, doc, setDoc, writeBatch } from 'firebase/firestore';\r\n\r\nexport default () => {\r\n\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [data, setData] = useState([])\r\n\r\n  //Manejamos la lógica del login desde el observador de firebase\r\n  useEffect( (()=> {\r\n\r\n    //AUTOGENERACION DE PRODUCTOS, SÓLO USAR 1 VEZ PARA POBLAR PRODUCTOS\r\n    /* ( ()=> {\r\n\r\n      fetch('https://fakestoreapi.com/products')\r\n      .then((response)=> response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        data.forEach( async(item) => {\r\n          const response = await addDoc( collection(db, \"products\"), {\r\n            id: item.id,\r\n            title: item.title,\r\n            price: item.price,\r\n            description: item.description,\r\n            category: item.category,\r\n            image: item.image,\r\n          });\r\n          console.log(response);\r\n        })\r\n      })\r\n\r\n    })() */\r\n\r\n    onAuthStateChanged(auth, (user)=> {\r\n      if (user){\r\n        console.log(user);\r\n        const uid = user.uid;\r\n        setIsLogged(true)\r\n      } else {\r\n        console.log(\"No user logged\");\r\n        setIsLogged(false)\r\n      }\r\n    })\r\n  }), [])\r\n\r\n\r\n  //Renderizamos condicionalmente una navegación u otra\r\n  //dependiendo si estamos o no loggeados.\r\n  return (\r\n    <NavigationContainer>\r\n      {isLogged ?\r\n      <TabsShop/>\r\n      :\r\n      <AuthNavigator/>\r\n      }\r\n    </NavigationContainer>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ShopProvider from './context/Shop';\r\n\r\n// navigation\r\nimport MainNavigator from './navigation/MainNavigator'\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <ShopProvider>\r\n      <MainNavigator />\r\n    </ShopProvider>\r\n  )\r\n}\r\n"],"sourceRoot":""}